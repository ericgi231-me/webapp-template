name: Validate app is running
run-name: Validate app is running

on:
  workflow_call:
    inputs:
      app_name:
        description: 'Name of the application'
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SERVER_HOST:
        required: true
      SERVER_USER:
        required: true

jobs:
  validate-container-health:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Docker Buildx and Cache
        uses: ./.github/actions/setup-docker-cache
        with:
          app_name: ${{ inputs.app_name }}

      - name: SSH into Server and Validate Containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Checking Docker containers for project ${{ inputs.app_name }}''..."

            # Get all containers for the project
            CONTAINERS=$(docker ps --filter "label=com.docker.compose.project=${{ inputs.app_name }}")

            if [ -z "$CONTAINERS" ]; then
              echo "Error: No containers found for project '${{ inputs.app_name }}'." >&2
              exit 1
            fi

            echo "Containers found:"
            echo "$CONTAINERS"

            # Check for unhealthy containers
            UNHEALTHY_CONTAINERS=$(docker ps --filter "label=com.docker.compose.project=${{ inputs.app_name }}" --filter "health=unhealthy" --format "{{.ID}} {{.Names}}")

            if [ -n "$UNHEALTHY_CONTAINERS" ]; then
              echo "Error: The following containers are unhealthy:" >&2
              echo "$UNHEALTHY_CONTAINERS" >&2
              exit 1
            fi

            echo "All containers are healthy."