name: Validate environment
description: Validate that given env variables and secrets are valid for deployment
run-name: Validating env vars and secrets

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'Name of the application'
        required: true
        type: string
      public_port:
        description: 'Public port to reach apps router' # TODO: Gracefully handle public port collisions
        required: true
        type: string
  workflow_call:
    inputs:
      app_name:
        description: 'Name of the application'
        required: true
        type: string
      public_port:
        description: 'Public port to reach apps router' # TODO: Gracefully handle public port collisions
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SERVER_HOST:
        required: true
      SERVER_USER:
        required: true
      DATABASE_PASSWORD:
        required: false

jobs:
  validate-env:
    runs-on: ubuntu-latest

    steps:
      - name: Check Port availability on Server
        id: check-port # Add an ID to reference outputs
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "SSH connection successful!"

            # Get all used ports on the server
            ALL_USED_PORTS=$(ss -tulnH | awk '{print $5}' | grep -oE '[0-9]+$' | sort -u)
            echo "Currently used ports on the server:" 
            echo "$ALL_USED_PORTS"

            # Get the current app port from Docker Compose
            CURRENT_APP_PORT=$(docker ps --filter "label=com.docker.compose.project=${{ inputs.app_name }}" --format "{{.Ports}}" | awk -F'->' '/->/ {print $1}' | awk -F':' '{print $NF}')
            echo "Current application port: $CURRENT_APP_PORT"

            # Determine the next step based on port usage
            if echo "$ALL_USED_PORTS" | grep -q "${{ inputs.public_port }}"; then
              if [ "$CURRENT_APP_PORT" = "${{ inputs.public_port }}" ]; then
                echo "Port ${{ inputs.public_port }} is in use and matches the current app. Proceeding to reachability check."
                echo "MATCH" > port_check_result.txt
              else
                echo "Error: Port ${{ inputs.public_port }} is already in use by another application." >&2
                echo "CONFLICT" > port_check_result.txt
              fi
            else
              echo "Port ${{ inputs.public_port }} is not in use. Proceeding to open the port for testing."
              echo "OPEN" > port_check_result.txt
            fi

            # Debugging: Log the content of port_check_result.txt
            echo "Content of port_check_result.txt:"
            cat port_check_result.txt

            # Export the result as an output using GITHUB_OUTPUT
            RESULT=$(cat port_check_result.txt)
            echo "Port check result: $RESULT"
            echo "result=$RESULT" >> $GITHUB_OUTPUT

            # Ensure the script does not exit prematurely
            if [ "$RESULT" = "CONFLICT" ]; then
              exit 1
            fi

      - name: Debug Port Check Result
        run: |
          echo "Debugging the result of the port check step..."
          echo "Port check result: ${{ steps.check-port.outputs.result }}"

      - name: Open Port on Server for Testing (if needed)
        if: ${{ steps.check-port.outputs.result == 'OPEN' }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Opening port ${{ inputs.public_port }} for testing..."
            nohup nc -l ${{ inputs.public_port }} &

      - name: Check Port Reachability from GitHub Worker
        if: ${{ steps.check-port.outputs.result == 'MATCH' || steps.check-port.outputs.result == 'OPEN' }}
        run: |
          echo "Checking if port ${{ inputs.public_port }} can be reached..."
          if nc -zv ${{ secrets.SERVER_HOST }} ${{ inputs.public_port }}; then
            echo "Port ${{ inputs.public_port }} is reachable."
          else
            echo "Error: Port ${{ inputs.public_port }} is not reachable from the GitHub worker." >&2
          fi

      - name: Close Port on Server (if opened)
        if: ${{ steps.check-port.outputs.result == 'OPEN' }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Closing port ${{ inputs.public_port }}..."
            fuser -k ${{ inputs.public_port }}/tcp || true

